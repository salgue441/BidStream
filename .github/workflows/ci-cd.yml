name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  release:
    types: [published]

env:
  JAVA_VERSION: "21"
  MAVEN_OPTS: "-Djava.version=21"  # Explicit Java version for Maven

jobs:
  # Combined build and quality check
  build-and-verify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'maven'
          check-latest: true 

      - name: Fix Maven Wrapper Permissions
        working-directory: ./apps/backend
        run: |
          chmod +x mvnw
          ls -la mvnw  # Verify permissions

      - name: Verify Maven Wrapper
        working-directory: ./apps/backend
        run: ./mvnw -v 

      - name: Build and Test
        working-directory: ./apps/backend
        run: |
          ./mvnw clean verify \
            -DskipTests=false \
            -Djava.version=21 \
            --no-transfer-progress

      - name: Run Quality Checks
        working-directory: ./apps/backend
        run: |
          ./mvnw checkstyle:check spotbugs:check pmd:pmd

      - name: SonarCloud Analysis
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
        working-directory: ./apps/backend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./mvnw sonar:sonar \
            -Dsonar.projectKey=BidStream \
            -Dsonar.organization=${{ secrets.SONAR_ORG }} \
            -Dsonar.host.url=https://sonarcloud.io

  security-scan:
    needs: build-and-verify
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'maven'

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: 'java'
          queries: security-extended,security-and-quality

      - name: Build project for CodeQL
        working-directory: ./apps/backend
        run: ./mvnw clean compile

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:java"

      - name: Trivy Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "./apps/backend"
          format: "sarif"
          output: "trivy-results.sarif"
          ignore-unfixed: true
          severity: "CRITICAL,HIGH"

      - name: Upload Results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-results.sarif"